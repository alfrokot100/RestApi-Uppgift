// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestApi_Uppgift.Data;

#nullable disable

namespace RestApi_Uppgift.Migrations
{
    [DbContext(typeof(WorkDBContext))]
    partial class WorkDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RestApi_Uppgift.Models.Arbetserfarenhet", b =>
                {
                    b.Property<int>("ErfarenhetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ErfarenhetID"));

                    b.Property<string>("Beskrivning")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Datum")
                        .HasColumnType("int");

                    b.Property<string>("Jobbtitel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("PersonID")
                        .HasColumnType("int");

                    b.Property<int>("PersonID_FK")
                        .HasColumnType("int");

                    b.HasKey("ErfarenhetID");

                    b.HasIndex("PersonID");

                    b.ToTable("erfarenheter");
                });

            modelBuilder.Entity("RestApi_Uppgift.Models.Person", b =>
                {
                    b.Property<int>("PersonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonID"));

                    b.Property<string>("Beskrivning")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Epost")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Namn")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TelefonNmr")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("PersonID");

                    b.ToTable("person");
                });

            modelBuilder.Entity("RestApi_Uppgift.Models.Utbildning", b =>
                {
                    b.Property<int>("UtbildningsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UtbildningsID"));

                    b.Property<int>("Examen")
                        .HasColumnType("int");

                    b.Property<int?>("PersonID")
                        .HasColumnType("int");

                    b.Property<int?>("PersonID_FK")
                        .HasColumnType("int");

                    b.Property<string>("Skola")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("SlutDatum")
                        .HasColumnType("int");

                    b.Property<int>("StartDatum")
                        .HasColumnType("int");

                    b.HasKey("UtbildningsID");

                    b.HasIndex("PersonID");

                    b.ToTable("utbildnings");
                });

            modelBuilder.Entity("RestApi_Uppgift.Models.Arbetserfarenhet", b =>
                {
                    b.HasOne("RestApi_Uppgift.Models.Person", null)
                        .WithMany("Arbetserfarenheter")
                        .HasForeignKey("PersonID");
                });

            modelBuilder.Entity("RestApi_Uppgift.Models.Utbildning", b =>
                {
                    b.HasOne("RestApi_Uppgift.Models.Person", null)
                        .WithMany("Utbildningar")
                        .HasForeignKey("PersonID");
                });

            modelBuilder.Entity("RestApi_Uppgift.Models.Person", b =>
                {
                    b.Navigation("Arbetserfarenheter");

                    b.Navigation("Utbildningar");
                });
#pragma warning restore 612, 618
        }
    }
}
